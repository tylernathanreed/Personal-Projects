<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button_state</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_button</parentName>
  <maskName>spr_button</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Creation Control</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//* Attributes *//
image_speed = 0;
image_index = 0;
image_alpha = 0;

fade = 0;
disabled = false;
disabled_index = 1;
key = -1;

//* Save States *//
buttons = ds_list_create();
selected = -1;

var button, i;
for(i = 0; i &lt; 10; i += 1)
{
    button = instance_create(x + 24*(i+1), y, obj_button_select);
    button.index = i;
    button.parent = id;

    ds_list_add(buttons, button);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Load State</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//* Load Control *//
if(global.running)
    exit;

var file_name, file_id, nnn, sss, xxx, yyy, hhh, i;
file_name = working_directory + "\Save State " + string(selected) + ".lif";

if(file_name == "" || !file_exists(file_name))
    exit;

file_id = file_text_open_read(file_name);
show_debug_message("File '" + string(file_id) + "' Opened for Read");

if(file_id == -1)
{
    window_set_caption("Game of Life | Error");
    show_message("Unable to Load from specified File");
    exit;
}

with(obj_cell) // Clear Grid
    instance_destroy();

nnn = file_text_read_real(file_id);
view_xview = file_text_read_real(file_id);
view_yview = file_text_read_real(file_id);
view_wview = file_text_read_real(file_id);
view_hview = file_text_read_real(file_id);

for(i = 0; i &lt; nnn; i += 1)
{
    xxx = file_text_read_real(file_id);
    yyy = file_text_read_real(file_id);
    hhh = file_text_read_real(file_id);

    ds_grid_set(global.colors, xxx div global.size, yyy div global.size, make_color_hue(hhh, 1));

    cell = instance_create(floor(xxx), floor(yyy), obj_cell);
}

file_text_close(file_id);
io_clear();

//* Zoom Control *//
// Maintain Aspect Ratio
if(view_wport/view_hport != view_wview/view_hview)
    view_hview = view_wview/(view_wport/view_hport);

// Enforce Maximum Limit
if(view_wview &gt;= room_width || view_hview &gt;= room_height)
{
    view_wview = room_width;
    view_hview = room_height;
    obj_button_zoom_out.disabled = true;
}
else
    obj_button_zoom_out.disabled = false;

// Enforce Minimum Limit
if(view_wview &lt;= view_wport/2 || view_hview &lt;= view_hport/2)
{
    view_wview = view_wport/2;
    view_hview = view_hport/2;
    obj_button_zoom_in.disabled = true;
}
else
    obj_button_zoom_in.disabled = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Save State</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//* Save Control *//
if(global.running)
    exit;

var file_name, file_id;

file_name = working_directory + "\Save State " + string(selected) + ".lif";

if(file_name == "")
    exit;

file_id = file_text_open_write(file_name);

show_debug_message("File '" + string(file_id) + "' Opened for Write");

if(file_id == -1)
{
    window_set_caption("Game of Life | Error");
    show_message("Unable to Save to specified File");
    exit;
}

file_text_write_real(file_id, instance_number(obj_cell));
file_text_write_real(file_id, view_xview);
file_text_write_real(file_id, view_yview);
file_text_write_real(file_id, view_wview);
file_text_write_real(file_id, view_hview);

with(obj_cell)
{
    file_text_write_real(file_id, x);
    file_text_write_real(file_id, y);
    file_text_write_real(file_id, floor(hue));
}

file_text_close(file_id);
io_clear();

with(obj_button_select)
    saving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Select State</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//* Save State *//
var button, i;
for(i = 0; i &lt; 10; i += 1)
{
    button = ds_list_find_value(buttons, i);
    button.saving = !button.saving;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw Control</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//* Draw Control *//
event_inherited();

draw_set_font(font_state);
draw_set_color(c_dkgray);
draw_text(x + 1, y + 4, "Set");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
